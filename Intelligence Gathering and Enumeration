Intelligence Gathering and Enumeration
 Enumerating ASN and IP Blocks
	Query for ASN
		curl -s https://api.bgpview.io/search?query_term=paypal | jq
		nmap --script targets-asn --script-args targets-asn.asn=26444
		Code bash script check file phpinfo.php:
		for ipa in 98.13{6..9}.{0..255}.{0..255}; do
			wget -t 1 -T 5 http://${ipa}/phpinfo.php;
		done &
	Reverse IP Lookup
		YouGetSignal, ViewDNS.info, rapiddns.io, and many others
		curl -s 'https://rapiddns.io/sameip/64.4.250.0/24?full=1#result' | grep 'target="' -B1 | egrep -v '(--|) ' | rev | cut -c 6- | rev | cut -c 5- | sort -u
 REVERSE IP LOOKUP WITH MULTI-THREADINGS
 interlace -tL ip.txt -c "curl -s 'https://rapiddns.io/sameip/_target_?full=1#result' | grep 'target=' -B1 | egrep -v '(--|) ' | rev | cut -c 6- | rev | cut -c 5- | sort -u >> output.txt" -threads 2 --silent --no-color --no-bar
	Scanning for Open Ports/Services
 SCANNING OPEN PORTS WITH MASSCAN
 sudo masscan --open-only 10.22.144.0/24 -p1-65535,U:1-65535 --rate=10000 --http-user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0" -oL "output.txt"
 DETECTING HTTP SERVICES BY RUNNING HTTPX
 cat output.txt | grep tcp | awk ' {print $4,":",$3}' | tr -d ' ' | httpx -title -sc -cl
	Scanning for Service Versions
	Nmap -sC -sV 10.22.144.147 -T4
	SUBDOMAIN ENUMERATION
		 Subdomain Enumeration DNS Bruteforce
			NS bruteforcing happens to be the most effective way of finding subdomains. This involves using a wordlist of commonly known subdomains, hence quite naturally, the outcome of the brute force is directly dependent upon the quality of the wordlist. Some of the popularly known DNS wordlists from “SECLIST” [https://github.com/danielmiessler/SecLists/tree/master/Discovery/DNS], “ASSETNOTE” [https://wordlists-cdn.assetnote.io/data/manual/best-dns-wordlist.txt], and “Rapid Forward DNS” [https://opendata.rapid7.com/sonar.fdns_v2/] can be utilized for this purpose
 DNSVALIDATOR
	dnsvalidator -tL https://public-dns.info/nameservers.txt -threads 100 -o resolvers.txt
 ShuffleDNS
	shuffledns -d paypal.com -w subdomains-top1million-5000.txt -r resolvers.txt
 SUBBRUTE
	python3 subbrute.py sub-wordlist.txt paypal.com | massdns -r resolvers.txt -o S -w output.txt
  GOBUSTER
  gobuster dns -w sub-wordlist.txt -d paypal.com -t 50
	Subdomain Enumeration Subdomains From Content Security Policy
		Step 1: Downloading Favicon
		curl -I -s https://api-s.sandbox.paypal.com | grep -iE 'content-security-policy|CSP' |tr " " "\n" | grep "\." | tr -d ";" | sed 's/\*\.//g' | sort -u
		Step 2: Generating MurmurHash
		cat favicon.ico | base64 | python3 -c "import mmh3, sys; print(mmh3.hash(sys.stdin.buffer.read()))"
		Step 3: Using Shodan Search
		Http.favicon.hash:309020573
  PUTTING IT ALL TOGETHER
  curl -s www.paypalobjects.com/webstatic/icon/favicon.ico | base64 | python3 -c 'import mmh3, sys;print(mmh3.hash(sys.stdin.buffer.read()))' | xargs -I{} shodan search http.favicon.hash:{} --fields hostnames | tr ";" "\n"
	Passive Enumeration of Subdomains
		Subdomain Enumeration with RapidDNS
		 curl -s https://rapiddns.io/subdomain/paypal.com?full=1 | grep -Eo '[a-zA-Z0–9.-]+\.[a-zA-Z]{2,}' | sort -u
		Passive Subdomain Enumeration and API Tools
		 SecurityTrails API: https://api.securitytrails.com
		 AlienVault OTX API: https://otx.alienvault.com/api
		 URLScan: https://urlscan.io/
		 HackerTarget: https://hackertarget.com/
		 Pentest-Tools: https://pentest-tools.com/
		 DNSdumpster: https://dnsdumpster.com/
		 crt.sh: https://crt.sh
		Using Sublist3r for Enumerating Subdomains from Search Engines
		 ./sublist3r.py -d paypal.com
		Subdomain Enumeration Using GitHub
		 python3 github-subdomains.py -t API-KEY -d paypal.com -e
		Subdomain Enumeration Using Subject Alternative Name (SAN)
		 true | openssl s_client -connect api.paypal.com:443 2>/dev/null | openssl x509 -noout -text | grep "DNS" | tr ',' '\n' | cut -d ":" -f2
		Using Web Archives for Subdomain Enumeration
		 echo example.com | gau --subs
		 echo example.com | gau --subs | unfurl -u domains | sort -u
	Active + Passive Subdomain Enumeration Using Amass
		Amass Intel Module
		 Org Flag
		 amass intel -org "google"
		 Asn flag
		 amass intel -asn 44384
		 Whois flag
		 amass intel -whois -d paypal.com
		Amass Enum Module
		 Active mode
		 amass enum -active -d paypal.com -src
		 Passive mode
		 amass enum -passive -d paypal.com -src
		Amass db Module
		 amass db -list
		 amass db -show -d owasp.org
		Amass viz Module
		 amass viz -d3 -dir paypal
		Amass Track Module
		 amass track -d paypal.com
	 Data Consolidation
		Removing Duplicates from Subdomain Lists
		 cat * | sort -u > paypal-subdomain.txt
		Excluding Dead Subdomains with Httpx
		 cat paypal-subdomain.txt | httpx -sc -cl --title -o paypal-alive-subdomain.txt
		Validating Subdomains through EyeWitness Tool
		 python3 EyeWitness.py -f paypal-alive-subdomain.txt --web --timeout 50 -d screenshots
  SUBDOMAIN TAKEOVER
	dig redseclabsto.redseclabs.com
  	Automated Subdomain Takeover Using Subjack
		subjack -w subdomains.txt -t 100 -timeout 30 -o results.txt
  FINGERPRINT WEB APPLICATIONS
   Directory Fuzzing
    Fuzzing Directories with FFUF
	ffuf -w wordlist.txt -u http://demo-site.com/FUZZ -mc 200 -e. php
    Fuzzing Directories with Dirbuster
   Discovering Endpoints Using Passive Enumeration Techniques
	 Finding Endpoints with WebArchive
	 http://web.archive.org/cdx/search/cdx?url=paypal.com/*&output=text&fl=original&collapse=urlkey
	 Using GAU for Endpoint Discovery
	 echo paypal.com | gau --threads 10 --o gau.txt
	 Removing Duplicates from GAU Output
	 cat gau.txt | sort -u | uro
	 Exploring JavaScript Files for Enumeration
	 Extracting Subdomains from JavaScript Files
	 curl -s www.paypalobjects.com/pa/mi/paypal/latmconf.js| grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | sort -u | grep paypal.com
	 Extracting Endpoints from JavaScript Files
	 curl -s www.paypalobjects.com/pa/mi/paypal/latmconf.js| grep -oh "\"\/[a-zA-Z0-9_/?=&]*\"" | sed -e 's/^"//' -e 's/"$//' | sort -u
	 Enhancing Code Readability for JavaScript Files
	 js-beautify example.js > beautify-example.js
	 Automatically Analyzing All JavaScript Files
	 Step 1: Collecting JavaScript Files
	 grep "\.js" paypal.txt | sort -u | httpx -silent -mc 200 -o paypal-js.txt
	 Step 2: Extracting endpoints from JavaScript Files
	 while read url; do. /linkfinder.py -i $url -o cli >> paypal-endpoinsts.txt;done <.. /paypal-js.txt
	 Extracting Sensitive Data from JS Files
	 python3 SecretFinder.py -i https://example.com/1.js -o cli
   Enumerating Input Parameters
	 Using Arjun to Fuzz Parameters
	 arjun -u url
	 Generating Custom Wordlist
	 echo tesla.com | gau --subs | grep '=' | unfurl keys | sort -u
	 gau tesla.com | unfurl --unique keys
  MAPPING THE ATTACK SURFACE USING CRAWLING/SPIDERING
   Crawling Using Gospider
	gospider -s https://paypal.com
   	gospider -S domains.txt -o gospider-output -c 10
	 Crawling with Active Session
	 gospider -s http://demo-site.com/ --cookie "PHPSESSID=jhbjh6f995v1g1mf2ciop70q2l"
  AUTOMATIC MAPPING OF NEW ATTACK SURFACE
  FINGERPRINTING WEB APPLICATIONS
   Inspecting HTTP Response Headers
	curl -I https://paypalmanager.sandbox.paypal.com
   Forcing Errors for Exposing Versions
   Fingerprinting Using WhatWeb/Wappalyzer
	whatweb http://demo-site.com/phpadmin/
    Wappalyzer Browser Extensions
  DETECTING KNOWN VULNERABILITIES AND EXPLOITS
	searchsploit phpmyadmin -s 4.8.1 -w
	searchsploit --cve 2021-44444
  VULNERABILITY SCANNING USING NUCLEI
	nuclei -target http://demo-site.com
  CLOUD ENUMERATION
	
